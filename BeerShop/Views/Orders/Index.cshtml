@model IEnumerable<BeerShop.Models.Order>
@{
    ViewBag.Title = "Index";
}
@if (ViewBag.loggedCustomer is BeerShop.Models.Worker)
{ 
    <h2>
        Order Index</h2>
}
else
{
    <h2>
        My Orders</h2>
}
<br />
<table class="table table-striped">
    <tr>
        <th>
            Order ID
        </th>
        <th>
            Full name
        </th>
        <th>
            Status
        </th>
        <th>
            Created Date
        </th>
        <th>
            Dispached Date
        </th>
        <th>
            Delivered Date
        </th>
        <th>
        </th>
    </tr>
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.OrderID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.customer.firstName)
                @Html.DisplayFor(modelItem => item.customer.lastName)
            </td>
            <td>
                @{int st = item.status; switch (st)
                  {
                      case 1: @:pending
                          break;
                      case 2: @:processing
                          break;
                      case 3: @:dispached
                          break;
                      case 4: @:delivered
                          break;
                      case 5: @:canceled
                          break;
                      case 6: @:paying
                          break;
                      default: @:wtf
                          break;
                  }
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.createdDate)
            </td>
            <td>
                @if (item.dispachedDate.Date == new DateTime(9999, 12, 31))
                { 
                    @:Not Dispached Yet
                }
                else
                {
                    @Html.DisplayFor(modelItem => item.dispachedDate)
                }
            </td>
            <td>
                @if (item.deliveredDate.Date == new DateTime(9999, 12, 31))
                { 
                    @:Not Delivered Yet
                }
                else
                {
                    @Html.DisplayFor(modelItem => item.deliveredDate)
                }
            </td>
            <td>
                @if (ViewBag.loggedCustomer is BeerShop.Models.Worker)
                { 
                    @Html.ActionLink("Edit", "Edit", new { id = item.OrderID }, new { @class = "btn btn-small" })
                }
                @Html.ActionLink("Details", "Details", new { id = item.OrderID }, new { @class = "btn btn-small btn-primary" })
            </td>
        </tr>
    }
</table>
<div align="right">
    @Html.ActionLink("Back", "Index", "Home", null, new { @class = "btn" })
</div>
<br />
